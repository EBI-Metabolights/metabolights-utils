[project]
name = "metabolights-utils"
version = "1.4.4"
description = "MetaboLights open metabolomics data repository utility tools and API."
authors = [{ name = "MetaboLights Team", email = "metabolights-dev@ebi.ac.uk" }]
requires-python = ">=3.8,<4"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "metabolights",
    "metabolomics",
    "ISA data model",
    "mtbls",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: File Formats",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Utilities",
]
dependencies = [
    "pydantic>2",
    "pydantic-settings>=2.0.3",
    "unidecode>=1.3.8",
    "jsonschema>=4.22.0",
    "click>=8.1.7",
    "beautifulsoup4>=4.12.3",
    "jsonpath-ng>=1.6.1",
    "httpx>=0.27.0",
]

[project.urls]
Homepage = "https://github.com/EBI-Metabolights/metabolights-utils"
Repository = "https://github.com/EBI-Metabolights/metabolights-utils"

[project.scripts]
mtbls = "metabolights_utils.commands.cli:cli"

[dependency-groups]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.14.0",
]
dev = [
    "coverage[toml]>7.2",
    "mkdocs>=1.4.3",
    "griffe>=0.32.3",
    "mkdocstrings-python>=1.2.1",
    "markdown-mdantic>=1.3.3",
    "python-semantic-release>=9.8.3",
    "ipykernel>=6.29.4,<7",
    "pytest-asyncio>=0.24.0,<0.25",
    "ruff>=0.9.2,<0.10",
    "mkdocs-material>=9.5.49,<10",
]

[tool.uv]
default-groups = [
    "test",
    "dev",
]

[tool.hatch.build.targets.sdist]
include = [
    "metabolights_utils",
    "docs",
    "tests",
]

[tool.hatch.build.targets.wheel]
include = [
    "metabolights_utils",
    "docs",
    "tests",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff.lint]
extend-select = ["E4", "E7", "E9", "F", "I", "G", "SLF", "Q", "T", "DTZ"]
fixable = ["ALL"]

[tool.coverage.run]
omit = [".*", "*/tests/*", "*/site-packages/*", "*/docs/*", "*/site/*", "*/dist/*", ".*/*"]

[tool.coverage.report]
fail_under = 80

[tool.coverage.html]
directory = "coverage_html_report"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["metabolights_utils/__init__.py:__VERSION__"]
assets = []
build_command = "poetry build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat", "API", "CLI"]
patch_tags = ["fix", "perf", "refactor"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

